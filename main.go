package main

import (
	"bytes"
	"fmt"
	"io"
	"os"
)

func main() {
	const targetFile = "Heroes3 HD.exe"
	const backupFile = "Heroes3 HD.exe.bak"

	needle := []byte{0x6a, 0x00, 0x8b,
		0x8c, 0x83, 0xcc, 0x53, 0x00, 0x00, 0x85, 0xc9, 0x75, 0x39, 0x8b, 0x0d, 0xc4, 0x5d, 0x6a, 0x00,
		0x6a, 0xff, 0x6a, 0x00, 0x6a, 0xff, 0x8b, 0x41, 0x20, 0x6a, 0x00, 0x6a, 0xff, 0x6a, 0x00, 0x8b,
		0x88, 0x00, 0x02, 0x00, 0x00, 0x6a, 0xff, 0x6a, 0xff, 0x6a, 0xff, 0xba, 0x01, 0x00, 0x00, 0x00,
	}
	patch := []byte{0x6a, 0x00, 0x8b,
		0x8c, 0x83, 0xcc, 0x53, 0x00, 0x00, 0x85, 0xc9, 0xc7, 0x84, 0x83, 0xb4, 0x54, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0xeb, 0x2e, 0x90, 0x8b, 0x41, 0x20, 0x6a, 0x00, 0x6a, 0xff, 0x6a, 0x00, 0x8b,
		0x88, 0x00, 0x02, 0x00, 0x00, 0x6a, 0xff, 0x6a, 0xff, 0x6a, 0xff, 0xba, 0x01, 0x00, 0x00, 0x00,
	}

	data, err := os.ReadFile(targetFile)
	if err != nil {
		exitErr(err)
	}

	idx := bytes.Index(data, needle)
	if idx == -1 {
		fmt.Println("The file does not match, unable to patch.")
		return
	}
	fmt.Printf("Start patching...\n")

	if err := copyFile(targetFile, backupFile); err != nil {
		exitErr(err)
	}
	fmt.Println("Backed up as: ", backupFile)

	n := len(needle)
	copy(data[idx:idx+n], patch[:n])

	if err := os.WriteFile(targetFile, data, 0644); err != nil {
		exitErr(err)
	}
	fmt.Println("Backup completed.")
}

func copyFile(src, dst string) error {
	s, err := os.Open(src)
	if err != nil {
		return err
	}
	defer s.Close()

	d, err := os.Create(dst)
	if err != nil {
		return err
	}
	defer d.Close()

	_, err = io.Copy(d, s)
	return err
}

func exitErr(err error) {
	fmt.Fprintln(os.Stderr, "Error:", err)
	os.Exit(1)
}
